p1
plot(y ~ x, data = df)
(
p1 <- ggplot(df, aes(x = x, y = y)) +
#geom_area(stat = "function", fun = dnorm, args = list(mean = 0.5, sd = 0.17), fill = "#97d7e4", alpha = 0.3, xlim = c(0, 1)) +
geom_smooth(method = "lm", se = FALSE) +
theme_bw() + theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(),
axis.text.x = element_text(color = "black"),
axis.text.y = element_text(color = "black"), legend.position = "none") +
scale_x_continuous(name = NULL, expand = c(1, 0), breaks = NULL) +
scale_y_continuous(name = NULL, expand = c(0, 0), limits = c(-1, 12), breaks = NULL) +
annotate(geom = "segment", x = 0.5, xend = 0.5, y = 0, yend = 2.35) +
annotate(geom = "text", x = 0.52, y = 2.48, size = 9, label = bquote(bar(x))))
(
p1 <- ggplot(df, aes(x = x, y = y)) +
#geom_area(stat = "function", fun = dnorm, args = list(mean = 0.5, sd = 0.17), fill = "#97d7e4", alpha = 0.3, xlim = c(0, 1)) +
geom_smooth(method = "lm", se = FALSE) +
theme_bw() + theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(),
axis.text.x = element_text(color = "black"),
axis.text.y = element_text(color = "black"), legend.position = "none") +
scale_x_continuous(name = NULL, expand = c(0, 0), breaks = NULL) +
scale_y_continuous(name = NULL, expand = c(0, 0), limits = c(-1, 12), breaks = NULL) +
annotate(geom = "segment", x = 0.5, xend = 0.5, y = 0, yend = 2.35) +
annotate(geom = "text", x = 0.52, y = 2.48, size = 9, label = bquote(bar(x))))
(
p1 <- ggplot(df, aes(x = x, y = y)) +
#geom_area(stat = "function", fun = dnorm, args = list(mean = 0.5, sd = 0.17), fill = "#97d7e4", alpha = 0.3, xlim = c(0, 1)) +
geom_smooth(method = "lm", formula = 'y ~ x', se = FALSE) +
theme_bw() + theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(),
axis.text.x = element_text(color = "black"),
axis.text.y = element_text(color = "black"), legend.position = "none") +
scale_x_continuous(name = NULL, expand = c(0, 0), breaks = NULL) +
scale_y_continuous(name = NULL, expand = c(0, 0), limits = c(-1, 12), breaks = NULL) +
annotate(geom = "segment", x = 0.5, xend = 0.5, y = 0, yend = 2.35) +
annotate(geom = "text", x = 0.52, y = 2.48, size = 9, label = bquote(bar(x))))
(p1 <- ggplot(df, aes(x = x, y = y)) +
#geom_area(stat = "function", fun = dnorm, args = list(mean = 0.5, sd = 0.17), fill = "#97d7e4", alpha = 0.3, xlim = c(0, 1)) +
geom_smooth(method = "lm", formula = 'y ~ x', se = FALSE) +
theme_bw() + theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(),
axis.text.x = element_text(color = "black"),
axis.text.y = element_text(color = "black"), legend.position = "none") +
scale_x_continuous(name = NULL, expand = c(0, 0), breaks = NULL) +
scale_y_continuous(name = NULL, expand = c(0, 0), limits = c(-1, 12), breaks = NULL) +
annotate(geom = "segment", x = 0.5, xend = 0.5, y = 0, yend = 2.35) +
annotate(geom = "text", x = 0.52, y = 2.48, size = 9, label = bquote(bar(x))))
(p1 <- ggplot(df, aes(x = x, y = y)) +
#geom_area(stat = "function", fun = dnorm, args = list(mean = 0.5, sd = 0.17), fill = "#97d7e4", alpha = 0.3, xlim = c(0, 1)) +
geom_smooth(method = "lm", formula = 'y ~ x', se = FALSE) +
theme_bw() + theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(),
axis.text.x = element_text(color = "black"),
axis.text.y = element_text(color = "black"), legend.position = "none") +
#scale_x_continuous(name = NULL, expand = c(0, 0), breaks = NULL) +
#scale_y_continuous(name = NULL, expand = c(0, 0), limits = c(-1, 12), breaks = NULL) +
annotate(geom = "segment", x = 0.5, xend = 0.5, y = 0, yend = 2.35) +
annotate(geom = "text", x = 0.52, y = 2.48, size = 9, label = bquote(bar(x))))
(p1 <- ggplot(df, aes(x = x, y = y)) + geom_point() +
#geom_area(stat = "function", fun = dnorm, args = list(mean = 0.5, sd = 0.17), fill = "#97d7e4", alpha = 0.3, xlim = c(0, 1)) +
geom_smooth(method = "lm", formula = 'y ~ x', se = FALSE) +
theme_bw() + theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(),
axis.text.x = element_text(color = "black"),
axis.text.y = element_text(color = "black"), legend.position = "none") +
#scale_x_continuous(name = NULL, expand = c(0, 0), breaks = NULL) +
#scale_y_continuous(name = NULL, expand = c(0, 0), limits = c(-1, 12), breaks = NULL) +
annotate(geom = "segment", x = 0.5, xend = 0.5, y = 0, yend = 2.35) +
annotate(geom = "text", x = 0.52, y = 2.48, size = 9, label = bquote(bar(x))))
(p1 <- ggplot(df, aes(x = x, y = y)) + geom_point() +
#geom_area(stat = "function", fun = dnorm, args = list(mean = 0.5, sd = 0.17), fill = "#97d7e4", alpha = 0.3, xlim = c(0, 1)) +
geom_smooth(method = "lm", formula = 'y ~ x', se = FALSE, color = 'black', size = 1) +
theme_bw() + theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(),
axis.text.x = element_text(color = "black"),
axis.text.y = element_text(color = "black"), legend.position = "none") +
#scale_x_continuous(name = NULL, expand = c(0, 0), breaks = NULL) +
#scale_y_continuous(name = NULL, expand = c(0, 0), limits = c(-1, 12), breaks = NULL) +
#annotate(geom = "segment", x = 0.5, xend = 0.5, y = 0, yend = 2.35) +
#annotate(geom = "text", x = 0.52, y = 2.48, size = 9, label = bquote(bar(x)))
)
(p1 <- ggplot(df, aes(x = x, y = y)) + geom_point() +
#geom_area(stat = "function", fun = dnorm, args = list(mean = 0.5, sd = 0.17), fill = "#97d7e4", alpha = 0.3, xlim = c(0, 1)) +
geom_smooth(method = "lm", formula = 'y ~ x', se = FALSE, color = 'black', size = 1) +
theme_bw() + theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(),
axis.text.x = element_text(color = "black"),
axis.text.y = element_text(color = "black"), legend.position = "none")
#scale_x_continuous(name = NULL, expand = c(0, 0), breaks = NULL) +
#scale_y_continuous(name = NULL, expand = c(0, 0), limits = c(-1, 12), breaks = NULL) +
#annotate(geom = "segment", x = 0.5, xend = 0.5, y = 0, yend = 2.35) +
#annotate(geom = "text", x = 0.52, y = 2.48, size = 9, label = bquote(bar(x)))
)
(p1 <- ggplot(df, aes(x = x, y = y)) + geom_point() +
#geom_area(stat = "function", fun = dnorm, args = list(mean = 0.5, sd = 0.17), fill = "#97d7e4", alpha = 0.3, xlim = c(0, 1)) +
geom_smooth(method = "lm", formula = 'y ~ x', se = FALSE, color = 'black', size = 0.51) +
theme_bw() + theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(),
axis.text.x = element_text(color = "black"),
axis.text.y = element_text(color = "black"), legend.position = "none")
#scale_x_continuous(name = NULL, expand = c(0, 0), breaks = NULL) +
#scale_y_continuous(name = NULL, expand = c(0, 0), limits = c(-1, 12), breaks = NULL) +
#annotate(geom = "segment", x = 0.5, xend = 0.5, y = 0, yend = 2.35) +
#annotate(geom = "text", x = 0.52, y = 2.48, size = 9, label = bquote(bar(x)))
)
(p1 <- ggplot(df, aes(x = x, y = y)) + geom_point() +
#geom_area(stat = "function", fun = dnorm, args = list(mean = 0.5, sd = 0.17), fill = "#97d7e4", alpha = 0.3, xlim = c(0, 1)) +
geom_smooth(method = "lm", formula = 'y ~ x', se = FALSE, color = 'black', size = 0.51, fullrange = TRUE) +
theme_bw() + theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(),
axis.text.x = element_text(color = "black"),
axis.text.y = element_text(color = "black"), legend.position = "none")
#scale_x_continuous(name = NULL, expand = c(0, 0), breaks = NULL) +
#scale_y_continuous(name = NULL, expand = c(0, 0), limits = c(-1, 12), breaks = NULL) +
#annotate(geom = "segment", x = 0.5, xend = 0.5, y = 0, yend = 2.35) +
#annotate(geom = "text", x = 0.52, y = 2.48, size = 9, label = bquote(bar(x)))
)
shiny::runApp('~/Dropbox/0-INM/validaR_shinyapp')
runApp('~/Dropbox/0-INM/validaR_shinyapp')
runApp('~/Dropbox/0-INM/validaR_shinyapp')
runApp('~/Dropbox/0-INM/validaR_shinyapp')
runApp('~/Dropbox/0-INM/validaR_shinyapp')
runApp('~/Dropbox/0-INM/validaR_shinyapp')
runApp('~/Dropbox/0-INM/validaR_shinyapp')
runApp('~/Dropbox/0-INM/validaR_shinyapp')
runApp('~/Dropbox/0-INM/validaR_shinyapp')
runApp('~/Dropbox/0-INM/validaR_shinyapp')
runApp('~/Dropbox/0-INM/validaR_shinyapp')
runApp('~/Dropbox/0-INM/validaR_shinyapp')
runApp('~/Dropbox/0-INM/validaR_shinyapp')
runApp('~/Dropbox/0-INM/validaR_shinyapp')
runApp('~/Dropbox/0-INM/validaR_shinyapp')
runApp('~/Dropbox/0-INM/validaR_shinyapp')
runApp('~/Dropbox/0-INM/validaR_shinyapp')
runApp('~/Dropbox/0-INM/validaR_shinyapp')
list(a=1, b=2, c=3)
list(a=1, b=2, c=3)[[-1]]
list(a=1, b=2, c=3)[-1]
runApp('~/Dropbox/0-INM/validaR_shinyapp')
2 %in% 2:4
runApp('~/Dropbox/0-INM/validaR_shinyapp')
runApp('~/Dropbox/0-INM/validaR_shinyapp')
runApp('~/Dropbox/0-INM/validaR_shinyapp')
runApp('~/Dropbox/0-INM/validaR_shinyapp')
runApp('~/Dropbox/0-INM/validaR_shinyapp')
runApp('~/Dropbox/0-INM/validaR_shinyapp')
runApp('~/Dropbox/0-INM/validaR_shinyapp')
runApp('~/Dropbox/0-INM/validaR_shinyapp')
runApp('~/Dropbox/0-INM/validaR_shinyapp')
runApp('~/Dropbox/0-INM/validaR_shinyapp')
runApp('~/Dropbox/0-INM/validaR_shinyapp')
runApp('~/Dropbox/0-INM/validaR_shinyapp')
runApp('~/Dropbox/0-INM/validaR_shinyapp')
ChcsVars <- 1:4
names(ChcsVars) <- paste('var.x', 1:4)
ChcsVars
ChcsVars[-2]
ChcsVars[-c(2)]
runApp('~/Dropbox/0-INM/validaR_shinyapp')
runApp('~/Dropbox/0-INM/validaR_shinyapp')
runApp('~/Dropbox/0-INM/validaR_shinyapp')
runApp('~/Dropbox/0-INM/validaR_shinyapp')
runApp('~/Dropbox/0-INM/validaR_shinyapp')
runApp('~/Dropbox/0-INM/validaR_shinyapp')
runApp('~/Dropbox/0-INM/validaR_shinyapp')
runApp('~/Dropbox/0-INM/validaR_shinyapp')
runApp('~/Dropbox/0-INM/validaR_shinyapp')
runApp('~/Dropbox/0-INM/validaR_shinyapp')
runApp('~/Dropbox/0-INM/validaR_shinyapp')
runApp('~/Dropbox/0-INM/validaR_shinyapp')
runApp('~/Dropbox/0-INM/validaR_shinyapp')
runApp('~/Dropbox/0-INM/validaR_shinyapp')
runApp('~/Dropbox/0-INM/validaR_shinyapp')
runApp('~/Dropbox/0-INM/validaR_shinyapp')
runApp('~/Dropbox/0-INM/validaR_shinyapp')
runApp('~/Dropbox/0-INM/validaR_shinyapp')
1:4[2]
(1:4)[2]
(1:4)['2']
runApp('~/Dropbox/0-INM/validaR_shinyapp')
runApp('~/Dropbox/0-INM/validaR_shinyapp')
ChcsVars
ChcsVars[-2]
ChcsVars[[-2]]
runApp('~/Dropbox/0-INM/validaR_shinyapp')
runApp('~/Dropbox/0-INM/validaR_shinyapp')
runApp('~/Dropbox/0-INM/validaR_shinyapp')
runApp('~/Dropbox/0-INM/validaR_shinyapp')
library(pracma)
citation('pracma')
runApp('~/Dropbox/0-INM/validaR_shinyapp')
runApp('~/Dropbox/0-INM/validaR_shinyapp')
install.packages(deming)
install.packages('deming')
citation('deming')
help('deming')
runApp('~/Dropbox/0-INM/validaR_shinyapp')
runApp('~/Dropbox/0-INM/validaR_shinyapp')
runApp('~/Dropbox/0-INM/validaR_shinyapp')
rlang::last_error()`
rlang::last_error()
runApp('~/Dropbox/0-INM/validaR_shinyapp')
runApp('~/Dropbox/0-INM/validaR_shinyapp')
runApp('~/Dropbox/0-INM/validaR_shinyapp')
runApp('~/Dropbox/0-INM/validaR_shinyapp')
runApp('~/Dropbox/0-INM/validaR_shinyapp')
runApp('~/Dropbox/0-INM/validaR_shinyapp')
runApp('~/Dropbox/0-INM/validaR_shinyapp')
runApp('~/Dropbox/0-INM/validaR_shinyapp')
runApp('~/Dropbox/0-INM/validaR_shinyapp')
runApp('~/Dropbox/0-INM/validaR_shinyapp')
data(arsenate)
data(Arsenate)
library(deming)
data(arsenate)
arsenate
runApp('~/Dropbox/0-INM/validaR_shinyapp')
deming::ferritin2
deming::ferritin
plot(deming::ferritin)
plot(deming::ferritin2)
subset(1:10)
subset(1:10, subset = 2)
sample(deming::ferritin2[, 3:4], size = 10)
deming::ferritin2[, 3:4]
deming::ferritin2[sample(162, 16), 3:4]
plot(deming::ferritin2[sample(162, 16), 3:4])
plot(deming::ferritin2[sample(162, 16), 3:4])
plot(deming::ferritin2[sample(162, 16), 3:4])
plot(deming::ferritin2[sample(162, 16), 3:4])
plot(deming::ferritin2[sample(162, 16), 3:4])
plot(deming::ferritin2[sample(162, 16), 3:4])
plot(deming::ferritin2[sample(162, 16), 3:4])
seed(0); plot(deming::ferritin2[sample(162, 16), 3:4])
set.seed(0); plot(deming::ferritin2[sample(162, 16), 3:4])
set.seed(0); plot(deming::ferritin2[sample(162, 16), 3:4])
set.seed(1); plot(deming::ferritin2[sample(162, 16), 3:4])
set.seed(1); plot(deming::ferritin2[sample(162, 25), 3:4])
set.seed(1); plot(deming::ferritin2[sample(162, 30), 3:4])
set.seed(1)
plot(deming::ferritin2[sample(162, 30), 3:4])
set.seed(2)
plot(deming::ferritin2[sample(162, 30), 3:4])
set.seed(3)
plot(deming::ferritin2[sample(162, 30), 3:4])
for(i in 1:20) {set.seed(1); plot(deming::ferritin2[sample(162, 30), 3:4], main = i)}
par(mfrow(c(3, 3)))
for(i in 1:20) {set.seed(i); plot(deming::ferritin2[sample(162, 30), 3:4], main = i)}
for(i in 21:40) {set.seed(i); plot(deming::ferritin2[sample(162, 30), 3:4], main = i)}
i <- 14; set.seed(i); plot(deming::ferritin2[sample(162, 15), 3:4], main = i)
i <- 19; set.seed(i); plot(deming::ferritin2[sample(162, 15), 3:4], main = i)
i <- 36; set.seed(i); plot(deming::ferritin2[sample(162, 15), 3:4], main = i)
par(mrow=c(23,2))
par(mfrow(c(333))
par(mfrow(c(3,3)))
par(mfrow = c(3,3))
for(i in 1:40) {set.seed(i); plot(deming::ferritin2[sample(162, 15, replace = FALSE), 3:4], main = i)}
for(i in 41:70) {set.seed(i); plot(deming::ferritin2[sample(162, 15, replace = FALSE), 3:4], main = i)}
for(i in 71:100) {set.seed(i); plot(deming::ferritin2[sample(162, 15, replace = FALSE), 3:4], main = i)}
i <- 14; set.seed(i); plot(deming::ferritin2[sample(162, 15), 3:4], main = i)
i <- 47; set.seed(i); plot(deming::ferritin2[sample(162, 15), 3:4], main = i)
par(mfrow = c(5,5))
for(i in 100:200) {set.seed(i); plot(deming::ferritin2[sample(162, 15, replace = FALSE), 3:4], main = i)}
par(mfrow = c(4,4))
for(i in 100:200) {set.seed(i); plot(deming::ferritin2[sample(162, 15, replace = FALSE), 3:4], main = i)}
for(i in 200:300) {set.seed(i); plot(deming::ferritin2[sample(162, 15, replace = FALSE), 3:4], main = i)}
i <- 47; plot(deming::ferritin2[sample(162, 15), 3:4], main = i)
par(mfrow = c(3,3))
i <- 47; plot(deming::ferritin2[sample(162, 15), 3:4], main = i)
i <- 14; plot(deming::ferritin2[sample(162, 15), 3:4], main = i)
i <- 36; plot(deming::ferritin2[sample(162, 15), 3:4], main = i)
par(mfrow = c(2,2))
i <- 36; plot(deming::ferritin2[sample(162, 15), 3:4], main = i)
i <- 14; plot(deming::ferritin2[sample(162, 15), 3:4], main = i)
i <- 14; set.seed(i); plot(deming::ferritin2[sample(162, 15), 3:4], main = i)
i <- 36; set.seed(i); plot(deming::ferritin2[sample(162, 15), 3:4], main = i)
i <-47; set.seed(i); plot(deming::ferritin2[sample(162, 15), 3:4], main = i)
i <-14; set.seed(i); plot(deming::ferritin2[sample(162, 15), 3:4], main = i)
deming::ferritin2[sample(162, 15), 3:4]
set.seed(47)
deming::ferritin2[sample(162, 15), 3:4]
runApp('~/Dropbox/0-INM/validaR_shinyapp')
df <- deming::ferritin2[sample(162, 15), 3:4]
colnames(df)
runApp('~/Dropbox/0-INM/validaR_shinyapp')
plot(arsenate)
plot(aas ~ aes, data = arsenate)
runApp('~/Dropbox/0-INM/validaR_shinyapp')
runApp('~/Dropbox/0-INM/validaR_shinyapp')
runApp('~/Dropbox/0-INM/validaR_shinyapp')
runApp('~/Dropbox/0-INM/validaR_shinyapp')
plot(aas ~ aes, data = arsenate)
i <- 1; set.seed(i)
set.seed(i); plot(aas ~ aes, data = arsenate)
arsenate
set.seed(i); plot(aas ~ aes, data = arsenate[sample(30, 16)])
set.seed(i); plot(aas ~ aes, data = arsenate[sample(30, 16), ])
runApp('~/Dropbox/0-INM/validaR_shinyapp')
i
set.seed(i); plot(aas ~ aes, data = arsenate[sample(30, 16), ])
set.seed(i); plot(aas ~ aes, data = arsenate[sample(30, 16), ])
set.seed(i); plot(aas ~ aes, data = arsenate[sample(30, 16), ])
runApp('~/Dropbox/0-INM/validaR_shinyapp')
runApp('~/Dropbox/0-INM/validaR_shinyapp')
runApp('~/Dropbox/0-INM/validaR_shinyapp')
runApp('~/Dropbox/0-INM/validaR_shinyapp')
fit <- deming(aes ~ aas, data=arsenate, xstd=se.aas, ystd=se.aes)
fit
summary(fit)
summary(fit$coefficients)
fit$coefficients
fit$se
fit$se*2
fit$se*1.96
fit$se
fit$model
fit$ci
residuals
fit$residuals
fit$variance
runApp('~/Dropbox/0-INM/validaR_shinyapp')
runApp('~/Dropbox/0-INM/validaR_shinyapp')
runApp('~/Dropbox/0-INM/validaR_shinyapp')
runApp('~/Dropbox/0-INM/validaR_shinyapp')
runApp('~/Dropbox/0-INM/validaR_shinyapp')
runApp('~/Dropbox/0-INM/validaR_shinyapp')
runApp('~/Dropbox/0-INM/validaR_shinyapp')
runApp('~/Dropbox/0-INM/validaR_shinyapp')
runApp('~/Dropbox/0-INM/validaR_shinyapp')
runApp('~/Dropbox/0-INM/validaR_shinyapp')
runApp('~/Dropbox/0-INM/validaR_shinyapp')
runApp('~/Dropbox/0-INM/validaR_shinyapp')
runApp('~/Dropbox/0-INM/validaR_shinyapp')
runApp('~/Dropbox/0-INM/validaR_shinyapp')
fit <- deming(aes ~ aas, data=arsenate, xstd=se.aas, ystd=se.aes)
str(fit)
fit
fit$coefficients
fit$se
fit$ci
fit$se*3
summary(fit)
fit$coefficients*fit$se
fit$coefficients
fit$se
fit
fit$coefficients
fit$se
afit1 <- pbreg(aes ~ aas, data= arsenate)
afit2 <- pbreg(aas ~ aes, data= arsenate)
rbind(coef(afit1), coef(afit2))  # symmetric results
1/coef(afit1)[2]
afit1
afit1$coefficients
summary(afit1)
runApp('~/Dropbox/0-INM/validaR_shinyapp')
runApp('~/Dropbox/0-INM/validaR_shinyapp')
runApp('~/Dropbox/0-INM/validaR_shinyapp')
lms <- lm(1:10, 2:11+rnorm(10))
lms <- lm(1:10~ 2:11+rnorm(10))
1:10
2:11+rnorm(10)
1:10->x
2:11+rnorm(10)->y
lms <- lm(y~x)
lms
runApp('~/Dropbox/0-INM/validaR_shinyapp')
runApp('~/Dropbox/transmem_shinyapp')
runApp('~/Dropbox/0-INM/validaR_shinyapp')
runApp('~/Dropbox/0-INM/validaR_shinyapp')
runApp('~/Dropbox/0-INM/validaR_shinyapp')
runApp('~/Dropbox/0-INM/validaR_shinyapp')
runApp('~/Dropbox/0-INM/validaR_shinyapp')
runApp('~/Dropbox/0-INM/validaR_shinyapp')
runApp('~/Dropbox/0-INM/validaR_shinyapp')
runApp('~/Dropbox/0-INM/validaR_shinyapp')
runApp('~/Dropbox/0-INM/validaR_shinyapp')
runApp('~/Dropbox/0-INM/validaR_shinyapp')
runApp('~/Dropbox/0-INM/validaR_shinyapp')
runApp('~/Dropbox/0-INM/validaR_shinyapp')
runApp('~/Dropbox/0-INM/validaR_shinyapp')
InputSignif <- reactive(as.numeric(input$signif))
runApp('~/Dropbox/0-INM/validaR_shinyapp')
runApp('~/Dropbox/0-INM/validaR_shinyapp')
runApp('~/Dropbox/0-INM/validaR_shinyapp')
runApp('~/Dropbox/0-INM/validaR_shinyapp')
runApp('~/Dropbox/0-INM/validaR_shinyapp')
runApp('~/Dropbox/0-INM/validaR_shinyapp')
runApp('~/Dropbox/0-INM/validaR_shinyapp')
runApp('~/Dropbox/0-INM/validaR_shinyapp')
runApp('~/Dropbox/0-INM/validaR_shinyapp')
runApp('~/Dropbox/0-INM/validaR_shinyapp')
runApp('~/Dropbox/0-INM/validaR_shinyapp')
runApp('~/Dropbox/0-INM/validaR_shinyapp')
runApp('~/Dropbox/0-INM/validaR_shinyapp')
runApp('~/Dropbox/0-INM/validaR_shinyapp')
runApp('~/Dropbox/0-INM/validaR_shinyapp')
runApp('~/Dropbox/0-INM/validaR_shinyapp')
runApp('~/Dropbox/0-INM/validaR_shinyapp')
runApp('~/Dropbox/0-INM/validaR_shinyapp')
runApp('~/Dropbox/0-INM/validaR_shinyapp')
View(addTransTrend)
citation(deming)
citation('deming')
runApp('~/Dropbox/0-INM/validaR_shinyapp')
devtools::install_github("Russel88/COEF")
deming.fit <- function(x, y, noise_ratio = sd(y)/sd(x)) {
if(missing(noise_ratio) || is.null(noise_ratio)) noise_ratio <- eval(formals(sys.function(0))$noise_ratio) # this is just a complicated way to write `sd(y)/sd(x)`
delta <-  noise_ratio^2
x_name <- deparse(substitute(x))
s_yy <- var(y)
s_xx <- var(x)
s_xy <- cov(x, y)
beta1 <- (s_yy - delta*s_xx + sqrt((s_yy - delta*s_xx)^2 + 4*delta*s_xy^2)) / (2*s_xy)
beta0 <- mean(y) - beta1 * mean(x)
res <- c(beta0 = beta0, beta1 = beta1)
names(res) <- c("(Intercept)", x_name)
class(res) <- "Deming"
res
}
deming <- function(formula, data, R = 100, noise_ratio = NULL, ...){
ret <- boot::boot(
data = model.frame(formula, data),
statistic = function(data, ind) {
data <- data[ind, ]
args <- rlang::parse_exprs(colnames(data))
names(args) <- c("y", "x")
rlang::eval_tidy(rlang::expr(deming.fit(!!!args, noise_ratio = noise_ratio)), data, env = rlang::current_env())
},
R=R
)
class(ret) <- c("Deming", class(ret))
ret
}
predictdf.Deming <- function(model, xseq, se, level) {
pred <- as.vector(tcrossprod(model$t0, cbind(1, xseq)))
if(se) {
preds <- tcrossprod(model$t, cbind(1, xseq))
data.frame(
x = xseq,
y = pred,
ymin = apply(preds, 2, function(x) quantile(x, probs = (1-level)/2)),
ymax = apply(preds, 2, function(x) quantile(x, probs = 1-((1-level)/2)))
)
} else {
return(data.frame(x = xseq, y = pred))
}
}
# unrelated hlper function to create a nicer plot:
fix_plot_limits <- function(p) p + coord_cartesian(xlim=ggplot_build(p)$layout$panel_params[[1]]$x.range, ylim=ggplot_build(p)$layout$panel_params[[1]]$y.range)
library(ggplot2)
#devtools::install_github("Russel88/COEF")
library(COEF)
fix_plot_limits(
ggplot(data.frame(x = (1:5) + rnorm(100), y = (1:5) + rnorm(100)*2), mapping = aes(x=x, y=y)) +
geom_point()
) +
geom_smooth(method=deming, aes(color="deming"), method.args = list(noise_ratio=2)) +
geom_smooth(method=lm, aes(color="lm")) +
geom_smooth(method = COEF::tls, aes(color="tls"))
fix_plot_limits(
ggplot(data.frame(x = (1:5) + rnorm(100), y = (1:5) + rnorm(100)*2), mapping = aes(x=x, y=y)) +
geom_point()
) +
geom_smooth(method=deming, aes(color="deming"), method.args = list(noise_ratio=1)) +
geom_smooth(method=lm, aes(color="lm")) +
geom_smooth(method = COEF::tls, aes(color="tls"))
fix_plot_limits(
ggplot(data.frame(x = (1:5) + rnorm(100), y = (1:5) + rnorm(100)*2), mapping = aes(x=x, y=y)) +
geom_point()
) +
geom_smooth(method=demingJANGLX, method.args = list(noise_ratio=1)) +
geom_smooth(method=lm, aes(color="lm")) +
geom_smooth(method = COEF::tls, aes(color="tls"))
demingJANGLX <- function(formula, data, R = 100, noise_ratio = NULL, ...){
ret <- boot::boot(
data = model.frame(formula, data),
statistic = function(data, ind) {
data <- data[ind, ]
args <- rlang::parse_exprs(colnames(data))
names(args) <- c("y", "x")
rlang::eval_tidy(rlang::expr(deming.fit(!!!args, noise_ratio = noise_ratio)), data, env = rlang::current_env())
},
R=R
)
class(ret) <- c("Deming", class(ret))
ret
}
predictdf.Deming <- function(model, xseq, se, level) {
pred <- as.vector(tcrossprod(model$t0, cbind(1, xseq)))
if(se) {
preds <- tcrossprod(model$t, cbind(1, xseq))
data.frame(
x = xseq,
y = pred,
ymin = apply(preds, 2, function(x) quantile(x, probs = (1-level)/2)),
ymax = apply(preds, 2, function(x) quantile(x, probs = 1-((1-level)/2)))
)
} else {
return(data.frame(x = xseq, y = pred))
}
}
# unrelated hlper function to create a nicer plot:
fix_plot_limits <- function(p) p + coord_cartesian(xlim=ggplot_build(p)$layout$panel_params[[1]]$x.range, ylim=ggplot_build(p)$layout$panel_params[[1]]$y.range)
library(ggplot2)
#devtools::install_github("Russel88/COEF")
library(COEF)
fix_plot_limits(
ggplot(data.frame(x = (1:5) + rnorm(100), y = (1:5) + rnorm(100)*2), mapping = aes(x=x, y=y)) +
geom_point()
) +
geom_smooth(method=demingJANGLX, method.args = list(noise_ratio=1)) +
geom_smooth(method=lm, aes(color="lm")) +
geom_smooth(method = COEF::tls, aes(color="tls"))
runApp('~/Dropbox/0-INM/validaR_shinyapp')
runApp('~/Dropbox/0-INM/validaR_shinyapp')
shiny::runApp('~/Dropbox/0-INM/validaR_shinyapp')
runApp('~/Dropbox/0-INM/validaR_shinyapp')
runApp('~/Dropbox/0-INM/validaR_shinyapp')
View(comparacionMediasServer_2)
